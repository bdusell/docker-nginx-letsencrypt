[supervisord]
user=root
# Do not write logs to a log file. Supervisord echoes all of its logs on stdout
# anyway.
logfile=/dev/null
logfile_maxbytes=0
loglevel=info
pidfile=/tmp/supervisord.pid
nodaemon=true

# The nginx web server.
[program:nginx]
# As soon as the daemon exits for any reason, send SIGTERM to supervisord so
# the whole container will stop.
# See https://github.com/Supervisor/supervisor/issues/712
command=bash -c 'nginx -g "daemon off;"; echo "supervisord.conf: nginx exited with status code $?; stopping supervisord"; kill -s SIGTERM "$(< /tmp/supervisord.pid)"'
# Do not try to restart a crashed process; the whole container should be
# stopped anyway.
autorestart=false
startretries=0
stopsignal=TERM
# Note that nginx needs to run with root privileges, but the user of the worker
# processes can be set in nginx.conf.
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stdout_logfile_backups=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
stderr_logfile_backups=0

# A cron daemon that is used to run the Certbot renewal script at regular
# intervals.
[program:cron]
command=bash -c '/app/busybox_CROND -f -L /dev/stdout; echo "supervisord.conf: crond exited with status code $?; stopping supervisord"; kill -s SIGTERM "$(< /tmp/supervisord.pid)"'
autorestart=false
startretries=0
stopsignal=TERM
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stdout_logfile_backups=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
stderr_logfile_backups=0
